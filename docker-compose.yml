version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: ./docker/local/api/Dockerfile
    command: /start
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - postgres-db
      - redis
    networks:
      - real-estate-api

  postgres-db:
    image: postgres:13.0-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - real-estate-api

  redis:
    image: redis:5-alpine
    networks:
      - real-estate-api

  celery_worker:
    build:
      context: .
      dockerfile: ./docker/local/api/Dockerfile
    command: /start-celeryworker
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - postgres-db
    networks:
      - real-estate-api

  flower:
    build:
      context: .
      dockerfile: ./docker/local/api/Dockerfile
    command: /start-flower
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "5557:5555"
    depends_on:
      - redis
      - postgres-db
    networks:
      - real-estate-api

  nginx:
    restart: always
    depends_on:
      - api
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    build:
      context: ./docker/local/nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    networks:
      - real-estate-api

networks:
  real-estate-api:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
